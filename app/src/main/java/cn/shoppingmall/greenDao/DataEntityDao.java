package cn.shoppingmall.greenDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.shoppingmall.bean.DataEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DATA_ENTITY".
*/
public class DataEntityDao extends AbstractDao<DataEntity, Void> {

    public static final String TABLENAME = "DATA_ENTITY";

    /**
     * Properties of entity DataEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property UserId = new Property(0, String.class, "UserId", false, "USER_ID");
        public final static Property UserName = new Property(1, String.class, "UserName", false, "USER_NAME");
        public final static Property UserTel = new Property(2, String.class, "UserTel", false, "USER_TEL");
        public final static Property Email = new Property(3, String.class, "Email", false, "EMAIL");
        public final static Property IdenCard = new Property(4, String.class, "IdenCard", false, "IDEN_CARD");
        public final static Property UserAddress = new Property(5, String.class, "UserAddress", false, "USER_ADDRESS");
        public final static Property BankName = new Property(6, String.class, "BankName", false, "BANK_NAME");
        public final static Property BankAccount = new Property(7, String.class, "BankAccount", false, "BANK_ACCOUNT");
        public final static Property UserStatus = new Property(8, String.class, "UserStatus", false, "USER_STATUS");
        public final static Property EM = new Property(9, String.class, "EM", false, "EM");
        public final static Property EM2 = new Property(10, String.class, "EM2", false, "EM2");
        public final static Property EM3 = new Property(11, String.class, "EM3", false, "EM3");
        public final static Property EM4 = new Property(12, String.class, "EM4", false, "EM4");
        public final static Property EM5 = new Property(13, String.class, "EM5", false, "EM5");
        public final static Property EM6 = new Property(14, String.class, "EM6", false, "EM6");
        public final static Property EM7 = new Property(15, String.class, "EM7", false, "EM7");
        public final static Property EM8 = new Property(16, String.class, "EM8", false, "EM8");
        public final static Property EM9 = new Property(17, String.class, "EM9", false, "EM9");
        public final static Property EM10 = new Property(18, String.class, "EM10", false, "EM10");
        public final static Property EM_First = new Property(19, String.class, "EM_First", false, "EM__FIRST");
        public final static Property LevelId = new Property(20, String.class, "LevelId", false, "LEVEL_ID");
        public final static Property LevelId2 = new Property(21, String.class, "LevelId2", false, "LEVEL_ID2");
        public final static Property LevelId3 = new Property(22, String.class, "LevelId3", false, "LEVEL_ID3");
        public final static Property Iden = new Property(23, String.class, "Iden", false, "IDEN");
        public final static Property RegTime = new Property(24, String.class, "RegTime", false, "REG_TIME");
        public final static Property StartTime = new Property(25, String.class, "StartTime", false, "START_TIME");
        public final static Property EndTime = new Property(26, String.class, "EndTime", false, "END_TIME");
        public final static Property ActUserId = new Property(27, String.class, "ActUserId", false, "ACT_USER_ID");
        public final static Property RefUserId = new Property(28, String.class, "RefUserId", false, "REF_USER_ID");
        public final static Property MyUsers = new Property(29, String.class, "MyUsers", false, "MY_USERS");
        public final static Property MyTotalMoney = new Property(30, String.class, "MyTotalMoney", false, "MY_TOTAL_MONEY");
        public final static Property TeamUsers = new Property(31, String.class, "TeamUsers", false, "TEAM_USERS");
        public final static Property TeamTotalMoney = new Property(32, String.class, "TeamTotalMoney", false, "TEAM_TOTAL_MONEY");
        public final static Property MyAreaUsers = new Property(33, String.class, "MyAreaUsers", false, "MY_AREA_USERS");
        public final static Property MyAreaTotalMoney = new Property(34, String.class, "MyAreaTotalMoney", false, "MY_AREA_TOTAL_MONEY");
        public final static Property ActUserName = new Property(35, String.class, "ActUserName", false, "ACT_USER_NAME");
        public final static Property RefUserName = new Property(36, String.class, "RefUserName", false, "REF_USER_NAME");
        public final static Property CountyName = new Property(37, String.class, "CountyName", false, "COUNTY_NAME");
        public final static Property CityName = new Property(38, String.class, "CityName", false, "CITY_NAME");
        public final static Property ProName = new Property(39, String.class, "ProName", false, "PRO_NAME");
        public final static Property LevelName = new Property(40, String.class, "LevelName", false, "LEVEL_NAME");
        public final static Property Money1 = new Property(41, String.class, "Money1", false, "MONEY1");
        public final static Property Money2 = new Property(42, String.class, "Money2", false, "MONEY2");
        public final static Property Money3 = new Property(43, String.class, "Money3", false, "MONEY3");
        public final static Property Money4 = new Property(44, String.class, "Money4", false, "MONEY4");
        public final static Property SettLayer1 = new Property(45, String.class, "SettLayer1", false, "SETT_LAYER1");
        public final static Property SettLayer2 = new Property(46, String.class, "SettLayer2", false, "SETT_LAYER2");
        public final static Property Range1 = new Property(47, String.class, "Range1", false, "RANGE1");
        public final static Property Range2 = new Property(48, String.class, "Range2", false, "RANGE2");
        public final static Property Quota1 = new Property(49, String.class, "Quota1", false, "QUOTA1");
        public final static Property Quota2 = new Property(50, String.class, "Quota2", false, "QUOTA2");
        public final static Property Rebate = new Property(51, String.class, "Rebate", false, "REBATE");
        public final static Property Token = new Property(52, String.class, "token", false, "TOKEN");
    };


    public DataEntityDao(DaoConfig config) {
        super(config);
    }
    
    public DataEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DATA_ENTITY\" (" + //
                "\"USER_ID\" TEXT," + // 0: UserId
                "\"USER_NAME\" TEXT," + // 1: UserName
                "\"USER_TEL\" TEXT," + // 2: UserTel
                "\"EMAIL\" TEXT," + // 3: Email
                "\"IDEN_CARD\" TEXT," + // 4: IdenCard
                "\"USER_ADDRESS\" TEXT," + // 5: UserAddress
                "\"BANK_NAME\" TEXT," + // 6: BankName
                "\"BANK_ACCOUNT\" TEXT," + // 7: BankAccount
                "\"USER_STATUS\" TEXT," + // 8: UserStatus
                "\"EM\" TEXT," + // 9: EM
                "\"EM2\" TEXT," + // 10: EM2
                "\"EM3\" TEXT," + // 11: EM3
                "\"EM4\" TEXT," + // 12: EM4
                "\"EM5\" TEXT," + // 13: EM5
                "\"EM6\" TEXT," + // 14: EM6
                "\"EM7\" TEXT," + // 15: EM7
                "\"EM8\" TEXT," + // 16: EM8
                "\"EM9\" TEXT," + // 17: EM9
                "\"EM10\" TEXT," + // 18: EM10
                "\"EM__FIRST\" TEXT," + // 19: EM_First
                "\"LEVEL_ID\" TEXT," + // 20: LevelId
                "\"LEVEL_ID2\" TEXT," + // 21: LevelId2
                "\"LEVEL_ID3\" TEXT," + // 22: LevelId3
                "\"IDEN\" TEXT," + // 23: Iden
                "\"REG_TIME\" TEXT," + // 24: RegTime
                "\"START_TIME\" TEXT," + // 25: StartTime
                "\"END_TIME\" TEXT," + // 26: EndTime
                "\"ACT_USER_ID\" TEXT," + // 27: ActUserId
                "\"REF_USER_ID\" TEXT," + // 28: RefUserId
                "\"MY_USERS\" TEXT," + // 29: MyUsers
                "\"MY_TOTAL_MONEY\" TEXT," + // 30: MyTotalMoney
                "\"TEAM_USERS\" TEXT," + // 31: TeamUsers
                "\"TEAM_TOTAL_MONEY\" TEXT," + // 32: TeamTotalMoney
                "\"MY_AREA_USERS\" TEXT," + // 33: MyAreaUsers
                "\"MY_AREA_TOTAL_MONEY\" TEXT," + // 34: MyAreaTotalMoney
                "\"ACT_USER_NAME\" TEXT," + // 35: ActUserName
                "\"REF_USER_NAME\" TEXT," + // 36: RefUserName
                "\"COUNTY_NAME\" TEXT," + // 37: CountyName
                "\"CITY_NAME\" TEXT," + // 38: CityName
                "\"PRO_NAME\" TEXT," + // 39: ProName
                "\"LEVEL_NAME\" TEXT," + // 40: LevelName
                "\"MONEY1\" TEXT," + // 41: Money1
                "\"MONEY2\" TEXT," + // 42: Money2
                "\"MONEY3\" TEXT," + // 43: Money3
                "\"MONEY4\" TEXT," + // 44: Money4
                "\"SETT_LAYER1\" TEXT," + // 45: SettLayer1
                "\"SETT_LAYER2\" TEXT," + // 46: SettLayer2
                "\"RANGE1\" TEXT," + // 47: Range1
                "\"RANGE2\" TEXT," + // 48: Range2
                "\"QUOTA1\" TEXT," + // 49: Quota1
                "\"QUOTA2\" TEXT," + // 50: Quota2
                "\"REBATE\" TEXT," + // 51: Rebate
                "\"TOKEN\" TEXT);"); // 52: token
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DATA_ENTITY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, DataEntity entity) {
        stmt.clearBindings();
 
        String UserId = entity.getUserId();
        if (UserId != null) {
            stmt.bindString(1, UserId);
        }
 
        String UserName = entity.getUserName();
        if (UserName != null) {
            stmt.bindString(2, UserName);
        }
 
        String UserTel = entity.getUserTel();
        if (UserTel != null) {
            stmt.bindString(3, UserTel);
        }
 
        String Email = entity.getEmail();
        if (Email != null) {
            stmt.bindString(4, Email);
        }
 
        String IdenCard = entity.getIdenCard();
        if (IdenCard != null) {
            stmt.bindString(5, IdenCard);
        }
 
        String UserAddress = entity.getUserAddress();
        if (UserAddress != null) {
            stmt.bindString(6, UserAddress);
        }
 
        String BankName = entity.getBankName();
        if (BankName != null) {
            stmt.bindString(7, BankName);
        }
 
        String BankAccount = entity.getBankAccount();
        if (BankAccount != null) {
            stmt.bindString(8, BankAccount);
        }
 
        String UserStatus = entity.getUserStatus();
        if (UserStatus != null) {
            stmt.bindString(9, UserStatus);
        }
 
        String EM = entity.getEM();
        if (EM != null) {
            stmt.bindString(10, EM);
        }
 
        String EM2 = entity.getEM2();
        if (EM2 != null) {
            stmt.bindString(11, EM2);
        }
 
        String EM3 = entity.getEM3();
        if (EM3 != null) {
            stmt.bindString(12, EM3);
        }
 
        String EM4 = entity.getEM4();
        if (EM4 != null) {
            stmt.bindString(13, EM4);
        }
 
        String EM5 = entity.getEM5();
        if (EM5 != null) {
            stmt.bindString(14, EM5);
        }
 
        String EM6 = entity.getEM6();
        if (EM6 != null) {
            stmt.bindString(15, EM6);
        }
 
        String EM7 = entity.getEM7();
        if (EM7 != null) {
            stmt.bindString(16, EM7);
        }
 
        String EM8 = entity.getEM8();
        if (EM8 != null) {
            stmt.bindString(17, EM8);
        }
 
        String EM9 = entity.getEM9();
        if (EM9 != null) {
            stmt.bindString(18, EM9);
        }
 
        String EM10 = entity.getEM10();
        if (EM10 != null) {
            stmt.bindString(19, EM10);
        }
 
        String EM_First = entity.getEM_First();
        if (EM_First != null) {
            stmt.bindString(20, EM_First);
        }
 
        String LevelId = entity.getLevelId();
        if (LevelId != null) {
            stmt.bindString(21, LevelId);
        }
 
        String LevelId2 = entity.getLevelId2();
        if (LevelId2 != null) {
            stmt.bindString(22, LevelId2);
        }
 
        String LevelId3 = entity.getLevelId3();
        if (LevelId3 != null) {
            stmt.bindString(23, LevelId3);
        }
 
        String Iden = entity.getIden();
        if (Iden != null) {
            stmt.bindString(24, Iden);
        }
 
        String RegTime = entity.getRegTime();
        if (RegTime != null) {
            stmt.bindString(25, RegTime);
        }
 
        String StartTime = entity.getStartTime();
        if (StartTime != null) {
            stmt.bindString(26, StartTime);
        }
 
        String EndTime = entity.getEndTime();
        if (EndTime != null) {
            stmt.bindString(27, EndTime);
        }
 
        String ActUserId = entity.getActUserId();
        if (ActUserId != null) {
            stmt.bindString(28, ActUserId);
        }
 
        String RefUserId = entity.getRefUserId();
        if (RefUserId != null) {
            stmt.bindString(29, RefUserId);
        }
 
        String MyUsers = entity.getMyUsers();
        if (MyUsers != null) {
            stmt.bindString(30, MyUsers);
        }
 
        String MyTotalMoney = entity.getMyTotalMoney();
        if (MyTotalMoney != null) {
            stmt.bindString(31, MyTotalMoney);
        }
 
        String TeamUsers = entity.getTeamUsers();
        if (TeamUsers != null) {
            stmt.bindString(32, TeamUsers);
        }
 
        String TeamTotalMoney = entity.getTeamTotalMoney();
        if (TeamTotalMoney != null) {
            stmt.bindString(33, TeamTotalMoney);
        }
 
        String MyAreaUsers = entity.getMyAreaUsers();
        if (MyAreaUsers != null) {
            stmt.bindString(34, MyAreaUsers);
        }
 
        String MyAreaTotalMoney = entity.getMyAreaTotalMoney();
        if (MyAreaTotalMoney != null) {
            stmt.bindString(35, MyAreaTotalMoney);
        }
 
        String ActUserName = entity.getActUserName();
        if (ActUserName != null) {
            stmt.bindString(36, ActUserName);
        }
 
        String RefUserName = entity.getRefUserName();
        if (RefUserName != null) {
            stmt.bindString(37, RefUserName);
        }
 
        String CountyName = entity.getCountyName();
        if (CountyName != null) {
            stmt.bindString(38, CountyName);
        }
 
        String CityName = entity.getCityName();
        if (CityName != null) {
            stmt.bindString(39, CityName);
        }
 
        String ProName = entity.getProName();
        if (ProName != null) {
            stmt.bindString(40, ProName);
        }
 
        String LevelName = entity.getLevelName();
        if (LevelName != null) {
            stmt.bindString(41, LevelName);
        }
 
        String Money1 = entity.getMoney1();
        if (Money1 != null) {
            stmt.bindString(42, Money1);
        }
 
        String Money2 = entity.getMoney2();
        if (Money2 != null) {
            stmt.bindString(43, Money2);
        }
 
        String Money3 = entity.getMoney3();
        if (Money3 != null) {
            stmt.bindString(44, Money3);
        }
 
        String Money4 = entity.getMoney4();
        if (Money4 != null) {
            stmt.bindString(45, Money4);
        }
 
        String SettLayer1 = entity.getSettLayer1();
        if (SettLayer1 != null) {
            stmt.bindString(46, SettLayer1);
        }
 
        String SettLayer2 = entity.getSettLayer2();
        if (SettLayer2 != null) {
            stmt.bindString(47, SettLayer2);
        }
 
        String Range1 = entity.getRange1();
        if (Range1 != null) {
            stmt.bindString(48, Range1);
        }
 
        String Range2 = entity.getRange2();
        if (Range2 != null) {
            stmt.bindString(49, Range2);
        }
 
        String Quota1 = entity.getQuota1();
        if (Quota1 != null) {
            stmt.bindString(50, Quota1);
        }
 
        String Quota2 = entity.getQuota2();
        if (Quota2 != null) {
            stmt.bindString(51, Quota2);
        }
 
        String Rebate = entity.getRebate();
        if (Rebate != null) {
            stmt.bindString(52, Rebate);
        }
 
        String token = entity.getToken();
        if (token != null) {
            stmt.bindString(53, token);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, DataEntity entity) {
        stmt.clearBindings();
 
        String UserId = entity.getUserId();
        if (UserId != null) {
            stmt.bindString(1, UserId);
        }
 
        String UserName = entity.getUserName();
        if (UserName != null) {
            stmt.bindString(2, UserName);
        }
 
        String UserTel = entity.getUserTel();
        if (UserTel != null) {
            stmt.bindString(3, UserTel);
        }
 
        String Email = entity.getEmail();
        if (Email != null) {
            stmt.bindString(4, Email);
        }
 
        String IdenCard = entity.getIdenCard();
        if (IdenCard != null) {
            stmt.bindString(5, IdenCard);
        }
 
        String UserAddress = entity.getUserAddress();
        if (UserAddress != null) {
            stmt.bindString(6, UserAddress);
        }
 
        String BankName = entity.getBankName();
        if (BankName != null) {
            stmt.bindString(7, BankName);
        }
 
        String BankAccount = entity.getBankAccount();
        if (BankAccount != null) {
            stmt.bindString(8, BankAccount);
        }
 
        String UserStatus = entity.getUserStatus();
        if (UserStatus != null) {
            stmt.bindString(9, UserStatus);
        }
 
        String EM = entity.getEM();
        if (EM != null) {
            stmt.bindString(10, EM);
        }
 
        String EM2 = entity.getEM2();
        if (EM2 != null) {
            stmt.bindString(11, EM2);
        }
 
        String EM3 = entity.getEM3();
        if (EM3 != null) {
            stmt.bindString(12, EM3);
        }
 
        String EM4 = entity.getEM4();
        if (EM4 != null) {
            stmt.bindString(13, EM4);
        }
 
        String EM5 = entity.getEM5();
        if (EM5 != null) {
            stmt.bindString(14, EM5);
        }
 
        String EM6 = entity.getEM6();
        if (EM6 != null) {
            stmt.bindString(15, EM6);
        }
 
        String EM7 = entity.getEM7();
        if (EM7 != null) {
            stmt.bindString(16, EM7);
        }
 
        String EM8 = entity.getEM8();
        if (EM8 != null) {
            stmt.bindString(17, EM8);
        }
 
        String EM9 = entity.getEM9();
        if (EM9 != null) {
            stmt.bindString(18, EM9);
        }
 
        String EM10 = entity.getEM10();
        if (EM10 != null) {
            stmt.bindString(19, EM10);
        }
 
        String EM_First = entity.getEM_First();
        if (EM_First != null) {
            stmt.bindString(20, EM_First);
        }
 
        String LevelId = entity.getLevelId();
        if (LevelId != null) {
            stmt.bindString(21, LevelId);
        }
 
        String LevelId2 = entity.getLevelId2();
        if (LevelId2 != null) {
            stmt.bindString(22, LevelId2);
        }
 
        String LevelId3 = entity.getLevelId3();
        if (LevelId3 != null) {
            stmt.bindString(23, LevelId3);
        }
 
        String Iden = entity.getIden();
        if (Iden != null) {
            stmt.bindString(24, Iden);
        }
 
        String RegTime = entity.getRegTime();
        if (RegTime != null) {
            stmt.bindString(25, RegTime);
        }
 
        String StartTime = entity.getStartTime();
        if (StartTime != null) {
            stmt.bindString(26, StartTime);
        }
 
        String EndTime = entity.getEndTime();
        if (EndTime != null) {
            stmt.bindString(27, EndTime);
        }
 
        String ActUserId = entity.getActUserId();
        if (ActUserId != null) {
            stmt.bindString(28, ActUserId);
        }
 
        String RefUserId = entity.getRefUserId();
        if (RefUserId != null) {
            stmt.bindString(29, RefUserId);
        }
 
        String MyUsers = entity.getMyUsers();
        if (MyUsers != null) {
            stmt.bindString(30, MyUsers);
        }
 
        String MyTotalMoney = entity.getMyTotalMoney();
        if (MyTotalMoney != null) {
            stmt.bindString(31, MyTotalMoney);
        }
 
        String TeamUsers = entity.getTeamUsers();
        if (TeamUsers != null) {
            stmt.bindString(32, TeamUsers);
        }
 
        String TeamTotalMoney = entity.getTeamTotalMoney();
        if (TeamTotalMoney != null) {
            stmt.bindString(33, TeamTotalMoney);
        }
 
        String MyAreaUsers = entity.getMyAreaUsers();
        if (MyAreaUsers != null) {
            stmt.bindString(34, MyAreaUsers);
        }
 
        String MyAreaTotalMoney = entity.getMyAreaTotalMoney();
        if (MyAreaTotalMoney != null) {
            stmt.bindString(35, MyAreaTotalMoney);
        }
 
        String ActUserName = entity.getActUserName();
        if (ActUserName != null) {
            stmt.bindString(36, ActUserName);
        }
 
        String RefUserName = entity.getRefUserName();
        if (RefUserName != null) {
            stmt.bindString(37, RefUserName);
        }
 
        String CountyName = entity.getCountyName();
        if (CountyName != null) {
            stmt.bindString(38, CountyName);
        }
 
        String CityName = entity.getCityName();
        if (CityName != null) {
            stmt.bindString(39, CityName);
        }
 
        String ProName = entity.getProName();
        if (ProName != null) {
            stmt.bindString(40, ProName);
        }
 
        String LevelName = entity.getLevelName();
        if (LevelName != null) {
            stmt.bindString(41, LevelName);
        }
 
        String Money1 = entity.getMoney1();
        if (Money1 != null) {
            stmt.bindString(42, Money1);
        }
 
        String Money2 = entity.getMoney2();
        if (Money2 != null) {
            stmt.bindString(43, Money2);
        }
 
        String Money3 = entity.getMoney3();
        if (Money3 != null) {
            stmt.bindString(44, Money3);
        }
 
        String Money4 = entity.getMoney4();
        if (Money4 != null) {
            stmt.bindString(45, Money4);
        }
 
        String SettLayer1 = entity.getSettLayer1();
        if (SettLayer1 != null) {
            stmt.bindString(46, SettLayer1);
        }
 
        String SettLayer2 = entity.getSettLayer2();
        if (SettLayer2 != null) {
            stmt.bindString(47, SettLayer2);
        }
 
        String Range1 = entity.getRange1();
        if (Range1 != null) {
            stmt.bindString(48, Range1);
        }
 
        String Range2 = entity.getRange2();
        if (Range2 != null) {
            stmt.bindString(49, Range2);
        }
 
        String Quota1 = entity.getQuota1();
        if (Quota1 != null) {
            stmt.bindString(50, Quota1);
        }
 
        String Quota2 = entity.getQuota2();
        if (Quota2 != null) {
            stmt.bindString(51, Quota2);
        }
 
        String Rebate = entity.getRebate();
        if (Rebate != null) {
            stmt.bindString(52, Rebate);
        }
 
        String token = entity.getToken();
        if (token != null) {
            stmt.bindString(53, token);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public DataEntity readEntity(Cursor cursor, int offset) {
        DataEntity entity = new DataEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // UserId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // UserName
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // UserTel
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // Email
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // IdenCard
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // UserAddress
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // BankName
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // BankAccount
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // UserStatus
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // EM
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // EM2
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // EM3
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // EM4
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // EM5
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // EM6
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // EM7
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // EM8
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // EM9
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // EM10
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // EM_First
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // LevelId
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // LevelId2
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // LevelId3
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // Iden
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // RegTime
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // StartTime
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // EndTime
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // ActUserId
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // RefUserId
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // MyUsers
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // MyTotalMoney
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // TeamUsers
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // TeamTotalMoney
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // MyAreaUsers
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // MyAreaTotalMoney
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // ActUserName
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // RefUserName
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // CountyName
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // CityName
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // ProName
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // LevelName
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // Money1
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // Money2
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // Money3
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // Money4
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // SettLayer1
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // SettLayer2
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // Range1
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // Range2
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // Quota1
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // Quota2
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // Rebate
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52) // token
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, DataEntity entity, int offset) {
        entity.setUserId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setUserName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setUserTel(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setEmail(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setIdenCard(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setUserAddress(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBankName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setBankAccount(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setUserStatus(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setEM(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setEM2(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setEM3(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setEM4(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setEM5(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setEM6(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setEM7(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setEM8(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setEM9(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setEM10(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setEM_First(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setLevelId(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setLevelId2(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setLevelId3(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setIden(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setRegTime(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setStartTime(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setEndTime(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setActUserId(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setRefUserId(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setMyUsers(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setMyTotalMoney(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setTeamUsers(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setTeamTotalMoney(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setMyAreaUsers(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setMyAreaTotalMoney(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setActUserName(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setRefUserName(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCountyName(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setCityName(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setProName(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setLevelName(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setMoney1(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setMoney2(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setMoney3(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setMoney4(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setSettLayer1(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setSettLayer2(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setRange1(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setRange2(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setQuota1(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setQuota2(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setRebate(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setToken(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(DataEntity entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(DataEntity entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
